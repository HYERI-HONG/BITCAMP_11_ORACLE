ALTER TABLE MEMBER ADD CONSTRAINT MEMBER_FK_TEAM_ID
	FOREIGN KEY(TEAM_ID) REFERENCES PROJECT_TEAM(TEAM_ID);

ALTER TABLE MEMBER   
DROP CONSTRAINT MEMBER_FK_TEAM_ID;

CREATE TABLE TEAMZ(
    TEAM_ID VARCHAR2(20) PRIMARY KEY,
    TEAM_NAME VARCHAR2(20)
);

select * from MEMBER;
SELECT * FROM PROJECT_TEAM;

CREATE TABLE MEMBER(
    TEAM_ID VARCHAR2(20),
    MEM_ID VARCHAR2(20) PRIMARY KEY,
    PASSWORD VARCHAR2(20),
    NAME VARCHAR2(20),
    AGE VARCHAR2(20),
    SSN VARCHAR2(20),
    GENDER VARCHAR2(20),
    ROLL VARCHAR2(20)
);

ALTER TABLE MEMBER MODIFY (ROLL VARCHAR(30));

INSERT INTO TEAMZ(
    TEAM_ID, team_name
)
VALUES(
    'ateam', '저스티스'
);
INSERT INTO TEAMZ(
    TEAM_ID, team_name
)
VALUES(
    'hteam', '아마조네스'
);
INSERT INTO TEAMZ(
    TEAM_ID, team_name
)
VALUES(
    'cteam', '가오갤'
);
INSERT INTO TEAMZ(
    TEAM_ID, team_name
)
VALUES(
    'steam', '어벤져스'
);

	
--ateam
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('a1','ateam','형준',34,'팀장');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('a2','ateam','세인',35,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('a3','ateam','희태',21,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('a4','ateam','상훈',29,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('a5','ateam','태형',25,'팀원');

--hteam
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('h1','hteam','혜리',26,'팀장');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('h2','hteam','지은',26,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('h3','hteam','단아',26,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('h4','hteam','재경',30,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('h5','hteam','준',27,'팀원');

--cteam
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('c1','cteam','최정훈',32,'팀장');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('c2','cteam','윤호',31,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('c3','cteam','가은',29,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('c4','cteam','정훈',23,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('c5','cteam','승태',30,'팀원');

--steam
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('s1','steam','승호',27,'팀장');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('s2','steam','소진',26,'팀원');
INSERT INTO TEAMW(MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('s3','steam','이슬',29,'팀원');
INSERT INTO TEAMW( MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('s4','steam','진태',26,'팀원');
INSERT INTO TEAMW(MEM_ID, TEAM_ID, MEM_NAME, MEM_AGE,ROLL)
VALUES('s5','steam','누리',30,'팀원');


--SUBJECT 테이블 생성
--과목 : JAVA,SQL,HTML5,R,PYTHON
CREATE TABLE SUBJECT(
    SUB_SEQ DECIMAL PRIMARY KEY,
    SUB_NAME VARCHAR2(20) 
);

--SEQUENCE생성
CREATE SEQUENCE SUB_SEQ;
--결과 확인
SELECT * FROM SUBJECT;

--SUBJECT 테이블에 데이터 삽입
INSERT INTO SUBJECT(
    SUB_SEQ, SUB_NAME
)
values(
    SUB_SEQ.NEXTVAL, 'JAVA'
);

INSERT INTO SUBJECT(
    SUB_SEQ, SUB_NAME
)
values(
    SUB_SEQ.NEXTVAL, 'SQL'
);

INSERT INTO SUBJECT(
    SUB_SEQ, SUB_NAME
)
values(
    SUB_SEQ.NEXTVAL, 'HTML5'
);
INSERT INTO SUBJECT(
    SUB_SEQ, SUB_NAME
)
values(
    SUB_SEQ.NEXTVAL, 'R'
);
INSERT INTO SUBJECT(
    SUB_SEQ, SUB_NAME
)
values(
    SUB_SEQ.NEXTVAL, 'PYTHON'
);


--RECORD테이블 생성
CREATE TABLE RECORD(
    RECORD_SEQ DECIMAL PRIMARY KEY,
    GRADE VARCHAR2(20),
    AGE VARCHAR2(20)
);
CREATE SEQUENCE RECORD_SEQ;

SELECT * FROM RECORD;
DROP TABLE RECORD;

--EXAM테이블 생성

CREATE TABLE EXAM(
    EXAM_SEQ DECIMAL PRIMARY KEY,
    MEM_ID VARCHAR2(20),
    SUB_SEQ DECIMAL,
    MONTH VARCHAR2(20),
    SCORE VARCHAR2(20),
    RECORD_SEQ DECIMAL
);
CREATE SEQUENCE EXAM_SEQ;

--EXAM테이블 외래키 설정
ALTER TABLE EXAM ADD CONSTRAINT EXAM_FK_MEM_ID
	FOREIGN KEY(MEM_ID) REFERENCES MEMBER(MEM_ID);
	
ALTER TABLE EXAM ADD CONSTRAINT EXAM_FK_SUB_SEQ
FOREIGN KEY(SUB_SEQ) REFERENCES SUBJECT(SUB_SEQ);

ALTER TABLE EXAM ADD CONSTRAINT EXAM_FK_RECORD_SEQ
FOREIGN KEY(RECORD_SEQ) REFERENCES RECORD(RECORD_SEQ);









--테이블의 데이터값 변경
UPDATE PROJECT_TEAM SET TEAM_NAME = '음악사이트팀'
WHERE TEAM_NAME LIKE '거북왕팀';

UPDATE MEMBER SET PASSWORD ='a1',TEAM_ID='LP',ROLL='팀장' 
WHERE PASSWORD LIKE 'test'
AND MEM_ID LIKE 'a1';


--테이블 컬럼 삭제
ALTER TABLE MEMBER
DROP COLUMN SSN;

--테이블에 row 삽입
INSERT INTO MEMBER(MEM_ID,NAME,PASSWORD,SSN)
values('t1','test','1234','891005-1156247');

--테이블에 특정 컬럼 데이터 변경
UPDATE MEMBER SET AGE = '30' 
WHERE MEM_ID LIKE 's5';

--row 삭제
DELETE FROM MEMBER 
WHERE MEM_ID LIKE 'c2'
AND PASSWORD like 'c2';


--테이블에 colum 추가
ALTER TABLE MEMBER
ADD(SUBJECT VARCHAR2(20));

--전체 테이블 조회
select
    rownum n,
    a.*
from(
    SELECT * FROM MEMBER
order by USERID) a
;

select
    rownum n,
    a.*
from(
    SELECT * FROM MEMBER
    WHERE TEAMID LIKE 'GG'
order by USERID) a
;

SELECT * 
from MEMBER
WHERE TEAM_ID LIKE 'GG';

commit;

--테이블 명 변경
ALTER TABLE TEAMZ
RENAME TO PROJECT_TEAM;

--컬럼명 변경
ALTER TABLE MEMBER
RENAME COLUMN MEM_ID TO USERID;

SELECT
MEM_ID USERID,
TEAM_ID TEAMID, 
NAME,
AGE,
ROLL,
PASSWORD, 
GENDER,
SSN 
FROM MEMBER
WHERE NAME LIKE '이슬'
OR NAME LIKE '이%';


--페이지 수를 구하는 쿼리
--ROWNUM을 구한 뒤
--페이지당 회워느이 ID만 보여주는 쿼리

SELECT B.*
FROM (SELECT
        ROWNUM N,
        A.*
        FROM MEMBER A
        ORDER BY N DESC) B
WHERE B.N BETWEEN 6 AND 10;

SELECT B.*
FROM (SELECT
        ROWNUM N,
        A.*
        FROM MEMBER A
        ORDER BY N DESC) B;



--팀장
--프론트 담당
--백단 담당
--안드로이드 담당

INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a6','a6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a7','a7','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a8','a8','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a9','a9','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a10','a10','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a11','a11','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a12','a12','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a13','a13','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a14','a14','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('LP','a15','a15','이름',0,'930318-2000000','여자','팀장');



INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('GG','b10','b10','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('GG','b11','b11','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('GG','b12','b12','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('GG','b13','b13','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('GG','b14','b14','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('GG','b15','b15','이름',0,'930318-2000000','여자','팀장');




INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c6','c6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c7','c7','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c8','c8','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c9','c9','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c10','c10','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c11','c11','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c12','c12','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c13','c13','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c14','c14','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('CodingStar','c15','c15','이름',0,'930318-2000000','여자','팀장');





INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');
INSERT INTO MEMBER( TEAMID, USERID, PASSWORD, NAME,AGE,SSN,GENDER,ROLL)
VALUES('TurtleKing','d6','d6','이름',0,'930318-2000000','여자','팀장');

--이미지 테이블 생성

--시퀀스 생성(제약조건)
CREATE SEQUENCE IMG_SEQ 
    START WITH 1000
    INCREMENT BY 1;

CREATE TABLE IMAGE(
    IMG_SEQ DECIMAL PRIMARY KEY,
    IMG_NAME VARCHAR2(20),
    EXTENSION VARCHAR2(10),
    USERID VARCHAR2(20),
    CONSTRAINT FK_IMAGE_MEMBER
    FOREIGN KEY (USERID)
    REFERENCES MEMBER (USERID)
);

DROP TABLE IMAGE;

SELECT * 
FROM IMAGE; 



INSERT INTO IMAGE(IMG_SEQ,IMG_NAME,EXTENSION,USERID)
VALUES('','','','');


SELECT M.USERID,
    PASSWORD,
    NAME,
    AGE,
    SSN,
    TEAMID,
    ROLL,
    I.IMG_NAME IMAGENAME,
    I.EXTENSION
FROM MEMBER M
JOIN IMAGE I
ON M.USERID LIKE I.USERID
WHERE M.USERID LIKE 'a1';

SELECT IMG_NAME IMAGENAME, EXTENSION
FROM IMAGE
WHERE USERID LIKE 'a1';

commit;
